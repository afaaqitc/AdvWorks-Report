library(flexdashboard)
library(janitor) #adorntotals
library(stringr) #
library(formattable)
library(DT) #datatable
library(tidyr)
library(dplyr)
library(openxlsx)
library(fedmatch) #
library(readxl)
library(lubridate)
library(pacman)
library(ggplot2)
library(openxlsx)
library(maps)
library(quantmod)
library(resample)
library(tseries)
library(forecast)
library(fpp2)
library(plotly)
setwd("~/Data/Learn/R_Projects/advworks_collect/")
items<-read.csv("items.csv")
countries<-read.csv("countries.csv")
oh<-read.csv("order_header.csv")
od<-read.csv("order_details.csv")
cus<-read.csv("cutomers.csv")
#------------------------------------------------------------------------------
oh<-
oh %>% mutate(OrderDate=mdy(OrderDate)) %>%
mutate(month_year=paste0(format(OrderDate,"%b"),"-",year(OrderDate)),
quarter_year=paste0(quarters(OrderDate),"-",year(OrderDate)),
week_month=paste0(format(OrderDate,"%V"),"-",format(OrderDate,"%b")),
days=weekdays(OrderDate),weekn=format(OrderDate,"%V"),
monthn=month(OrderDate),sow=round_date(OrderDate,"week"),years=year(OrderDate)) %>% rename(AddressID= ShipToAddressID,SalesOrderID=SalesOrder_ID)
od<-
od %>%rename(product_id=ProductID) %>%
inner_join(items,by="product_id") %>%
mutate(subtotal=case_when(
UnitPriceDiscount!=0 ~
OrderQty*(UnitPrice-(UnitPrice*UnitPriceDiscount)),TRUE ~(OrderQty*UnitPrice)),
dis=case_when(UnitPriceDiscount>0 ~ "Dis", TRUE ~ "-"))
oh<-
od %>% group_by(SalesOrderID) %>%
summarize(qty=sum(OrderQty),subtotal=sum(subtotal)) %>%
inner_join(oh,by="SalesOrderID")  %>%
inner_join(countries,by="AddressID") %>%mutate(order_sales=subtotal+TaxAmt+Freight)
oh<-
oh %>% mutate(
yw=round_date(OrderDate,"week"),
ym=round_date(OrderDate,"month"),
yq=round_date(OrderDate,"quarter"))
oh<-
oh %>% mutate(class=factor(case_when(qty>5 ~ "A",qty>4 ~ "B",TRUE ~ "D")))
#-----------------------------------------------------------------------------
yq_totals_dt<-
oh %>% group_by(years,qr=quarters(OrderDate)) %>% summarize(sales=sum(subtotal)) %>% pivot_wider(id_cols = years,names_from = qr,values_from =sales ,values_fill = FALSE) %>% adorn_totals("col") %>% adorn_totals("row") %>% datatable(class="hover row-border",extensions = list(Buttons=TRUE),options = list(dom="Bfrtip",buttons=c("csv","excel","pdf"),columnDefs=list(list(className="dt-center",targets=c(1:6))))) %>% formatCurrency(columns = c(2:6),digits = 2)
ymw_totals<-
oh %>% group_by(years,week_month,days) %>% summarize(sales=sum(subtotal)) %>%
pivot_wider(id_cols =c(years,week_month) ,names_from = days,values_from =sales ,values_fill = FALSE)%>%
select(years,week_month,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday)%>% adorn_totals("col")
ymw_totals_dt<-
ymw_totals %>% adorn_totals("row")%>%
datatable(class = "hover row-border",
extensions = list(Buttons=TRUE,RowGroup=TRUE),
options = list(dom="Bfrtip",buttons=c("csv","excel","pdf"),
rowGroup=list(dataSrc=1),columnDefs=list(list(className="dt-center",targets=1:10),
list(visible=FALSE,targets=1)))) %>% formatCurrency(columns = c(3:10),digits = 2)
ym_totals_chart<-
oh %>% mutate(months=factor(format(OrderDate,"%b"),
levels =c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec") ),
years=factor(years,levels =c(2011,2012,2013,2014) )) %>%
group_by(months,years) %>% summarize(sales=sum(subtotal)) %>%
ggplot(aes(x=months,y =sales,group =years ,color=years))+
geom_line() +theme_bw()+
scale_fill_brewer(palette = "Set1")
#-------------------------------Search-----------------------------------------
sales_orders_totals<-
oh %>% group_by(SalesOrderID,OrderDate,customer_name,countries) %>%
summarize(qty=sum(qty),subtotal=sum(subtotal),order_sales=sum(order_sales))
sales_orders_totals_dt<-
sales_orders_totals %>%
datatable(filter = "top",class="hover row-border strip",
extensions = list( Buttons=TRUE),
options = list(dom="Bfrtip",buttons=c("excel","csv","pdf"),
columnDefs=list(list(className="dt-center",targets=1:7)))) %>% formatCurrency(columns =c(6,7),digits = 2)
#------------------------------------------------------------------------------
items_categories_class<-
od %>% group_by(subcategories) %>%
summarize(sales=sum(subtotal),pct=(sum(subtotal)/sum(od$subtotal))*100) %>%
mutate(class=case_when(pct>3 ~ "A",TRUE ~ "B")) %>%
select(subcategories,class) %>% inner_join(od,by="subcategories") %>%
group_by(class,category_name,subcategories,product_name) %>%
summarize(sales=comma(sum(subtotal),digits = 2),qty=comma(sum(OrderQty))) %>%
arrange(class,by_group=TRUE)
items_categories_class_dt<-
items_categories_class %>%
datatable(class = "hover row-border",
extensions = list(Buttons=TRUE,RowGroup=TRUE),
options = list(dom="Bfrtip",buttons=c("excel","csv","pdf"),
rowGroup=list(dataSrc=c(1,2)),
columnDefs=list(list(className="dt-center",targets=c(1:6)),list(visible=FALSE,targets=c(1,2)))))
items_categories_class_chart<-
items_categories_class %>% group_by(class) %>% summarize(sales=round(sum(sales)/1000000)) %>% ggplot(aes(x="",y=sales,fill = class))+geom_bar(stat = "identity",width = 1)+coord_polar(theta = "y")+theme_void()+geom_text(aes(label = sales),color="white",size=6,fontface = "bold",position = position_stack(vjust = 0.6))+scale_fill_brewer(palette = "Set1")+labs(caption = "Total Per Millions.")+theme(plot.caption = element_text(face = "bold",hjust = ))
categories_chart<-
od %>% group_by(category_name) %>%
summarize(sales=round(sum(subtotal)/1000000,2)) %>%
ggplot(aes(x="",y=sales,fill=category_name))+
geom_bar(stat = "identity")+coord_polar(theta = "y")+theme_void()+
geom_text(aes(label=sales),color="white",size=4,fontface = "bold",
position = position_stack(vjust = 0.5))+
labs(subtitle = "Total Sales Per Millions.")+scale_fill_brewer(palette = "Set1")
categories_dt<-
od %>% group_by(category_name) %>% summarize(
Qty=comma(sum(OrderQty)),sales=comma(sum(subtotal)),
pct=round(sum(subtotal)/sum(od$subtotal),3)) %>% datatable(class="hover row-border",extensions = list(Buttons=TRUE),options = list(dom="Bfrtip",
buttons=c("csv","excel","pdf"),
columnDefs=list(list(className="dt-center",targets=c(1:4)))))
yr_categories<-
oh %>% group_by(SalesOrderID,OrderDate) %>%
summarize(n()) %>%select(SalesOrderID,OrderDate) %>%
inner_join(od,by="SalesOrderID") %>%
mutate(yrs=as.factor(year(OrderDate))) %>%
group_by(category_name,yrs)%>%
summarize(sales=sum(subtotal)) %>%
arrange(desc(sales),by_group=TRUE)
yr_categories_chart<-
oh %>% group_by(yrs=factor(years),countries) %>%
summarize(sales=sum(subtotal)) %>%
ggplot(aes(x=reorder( countries,sales),y=sales,fill=yrs))+
geom_bar(stat = "identity",position = "dodge")+theme_classic()+
labs(x="",y="",subtitle =paste0("Sales: ",
comma(sum(yr_categories$sales)/1000000),"M"," ","| Quantities: ",
comma(sum(sales_orders_totals$qty),digits = 0)),
caption = " ~ Sales Per Millions.")+
theme(axis.text.x = element_text(face = "bold",size = 9,colour = "black"),
axis.text.y = element_text(face = "bold",size = 9,colour = "black"),
plot.caption= element_text(hjust = 0.5,face = "bold.italic"),
plot.subtitle =element_text(color="brown",face = "bold"))
yr_categories_dt<-
yr_categories %>%
pivot_wider(id_cols = category_name,names_from = yrs,values_from =sales ,values_fill = FALSE) %>%
adorn_totals("col") %>%adorn_totals("row") %>%  datatable(class = "hover row-border",extensions = list(Buttons=TRUE),
options = list(list(dom="Bfrtip",buttons=c("csv","excel","pdf"),
columnDefs=list(list(className="dt-center",targets=c(1:6)))))) %>%
formatCurrency(columns = c(2:6),digits = 2)
Bikes_subcategories_totals_chart<-
od %>% filter(category_name=="Bikes") %>%
group_by(subcategories) %>% summarize(sales=sum(subtotal)) %>%
ggplot(aes(x="",y=sales,fill=subcategories))+
geom_bar(stat = "identity",width = 1)+coord_polar(theta = "y")+
theme_void()+geom_text(aes(label=round(sales/1000000,2)),fontface = "bold",
position = position_stack(vjust = 0.7),size = 5,color="white")+
labs(caption = "~ Sales Per Milions.")+
theme(plot.caption = element_text(face = "bold",size = 9,color="black",hjust = 0))
#------------------------------------------------------------------------------
countries_totals<-
oh %>% group_by(countries) %>%
summarize(sales=sum(subtotal),quantities=sum(qty)) %>%
arrange(desc(sales),by_group=TRUE)
countries_total_dt<-
countries_totals %>%adorn_totals("row") %>%
datatable(class = "hover row-border",
extensions = list(Buttons=TRUE),
options = list(dom="Bfrtip",buttons=c("csv","excel","pdf"),
columnDefs=list(list(className="dt-center",targets=1:3)))) %>% formatCurrency(columns = 2,digits = 2)
countries_totals_chart<-
countries_totals %>% mutate(sales=round(sales/1000000,2)) %>%
ggplot(aes(x=reorder(countries,sales),y=sales,fill =countries ))+
geom_bar(stat = "identity")+
geom_text(aes(label=sales),size=4,color="white",fontface = "bold",
position = position_stack(vjust = 0.7))+
labs(x="",y="",caption ="~ Total Sales Per Millions")+theme_bw()+
theme(plot.caption = element_text(face = "bold.italic",size = 8,hjust = 0,),
axis.text.x = element_text(face = "bold",size=9,colour = "black"),
axis.text.y = element_text(face = "bold",size=9,colour = "black"))+coord_flip()
#------------------------------------------------------------------------------
#Month
mn<-
oh %>% group_by(ym) %>% summarize(sales=sum(subtotal))
ms<-ts(mn$sales,start =c(2011,1) ,end =c(2013,6) ,frequency = 12)
ma<-auto.arima(ms)
mf<-forecast(ma,h = 13)
mfd<-data.frame(mf)
mfd<-mfd %>% mutate(month_year=rownames(mfd))
rownames(mfd)<-NULL
mfd<-mfd[,c(6,1:5)]
mfd<-mn[c(27:38),] %>%
mutate(month_year=paste(format(ym,"%b"),format(ym,"%Y"))) %>%
select(month_year,sales) %>% inner_join(mfd,by="month_year")
#Weeks
mw<-oh %>% group_by(yw) %>% summarize(sales=sum(subtotal))
mws<-ts(mw$sales,start =c(2011,5) ,end =c(2013,7),frequency = 52 )
mwa<-auto.arima(mws)
mwf<-forecast(mwa,h =47 )
wfd<-data.frame(mwf)
wfd<-wfd %>% mutate(week_month=rownames(wfd))
rownames(wfd)<-NULL
wfd<-wfd[,c(6,1:5)]
valueBox(value = comma(sum(ymw_totals$Total)),caption ="Sales" ,color = "#fad390")
valueBox(value = comma(sum(od$OrderQty)),caption = "Quantites",color = "#fad390")
valueBox(value =comma(sum(count(oh)),0) ,caption = "Orders",color = "#fad390")
valueBox(value =comma(oh %>% select(OrderDate) %>% unique() %>% mutate(n=row_number()) %>% summarize(n=max(n)) %>% select(n),0),caption ="Days" ,color = "#fad390")
yq_totals_dt
ggplotly(countries_totals_chart)
categories_dt %>% formatPercentage(columns = 4,digits = 2)
categories_chart
items_categories_class_dt %>% formatCurrency(columns = 5,digits = 2)
items_categories_class_chart
